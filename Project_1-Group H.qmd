---
title: "Project 1 - Group H"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Data Processing

```{r}
library(readr)
library(tidyverse)
library(lubridate)

# Read in one section of the data 
EDU01a_part <- read_csv("EDU01a.csv") |>
   select(Area_name,STCOU,ends_with("D")) |>
   rename(area_name=Area_name) |>
# Covert into long format
  pivot_longer(cols=3:12,
               names_to = "enrollment",
               values_to = "number") |>
# pull out the year and convert the year into a numeric value
# create a new variable with first 3 char and following 4 digits
  mutate(year=ifelse(as.numeric(substr(enrollment,8,9))>25,as.numeric(substr(enrollment,8,9))+1900,as.numeric(substr(enrollment,8,9))+2000),
        measurement=substr(enrollment,1,7)) |>
  collect()

# create two data sets with only non-county data/ only county level data

county_matching <- grep(pattern=", \\w\\w", EDU01a_part$area_name) 
county <- EDU01a_part[county_matching,]
non_county <- EDU01a_part[-county_matching,]
  
# add a class to the county_only data called county
class(county) <-c("county",class(county))

# add a class to the non-county level data called state
class(non_county) <-c("state",class(non_county))

# county-- create a new variable describe the state
county <-county |> 
  mutate(state=substr(area_name,nchar(county$area_name)-1,nchar(area_name)))

# non-county --create a new variable called division
# Define lists of divisions
new_england <- c("Connecticut", "Maine", "Massachusetts", "New Hampshire", "Rhode Island", "Vermont")
middle_atlantic <- c("New Jersey", "New York", "Pennsylvania")
east_north_central <- c("Illinois", "Indiana", "Michigan", "Ohio", "Wisconsin")
west_north_central <- c("Iowa", "Kansas", "Minnesota", "Missouri", "Nebraska", "North Dakota", "South Dakota")
south_atlantic <- c("Delaware", "Florida", "Georgia", "Maryland", "North Carolina", "South Carolina", "Virginia", "Washington, D.C.", "West Virginia")
east_south_central <- c("Alabama", "Kentucky", "Mississippi", "Tennessee")
west_south_central <- c("Arkansas", "Louisiana", "Oklahoma", "Texas")
mountain <- c("Arizona", "Colorado", "Idaho", "Montana", "Nevada", "New Mexico", "Utah", "Wyoming")
pacific <- c("Alaska", "California", "Hawaii", "Oregon", "Washington")

# Convert the lists to uppercase
new_england <- toupper(new_england)
middle_atlantic <- toupper(middle_atlantic)
east_north_central <- toupper(east_north_central)
west_north_central <- toupper(west_north_central)
south_atlantic <- toupper(south_atlantic)
east_south_central <- toupper(east_south_central)
west_south_central <- toupper(west_south_central)
mountain <- toupper(mountain)
pacific <- toupper(pacific)

# Assuming non_county is your data frame, convert the area_name column to uppercase
non_county <- non_county |>
  mutate(division = case_when(
    area_name %in% new_england ~ "New England",
    area_name %in% middle_atlantic ~ "Middle Atlantic",
    area_name %in% east_north_central ~ "East North Central",
    area_name %in% west_north_central ~ "West North Central",
    area_name %in% south_atlantic ~ "South Atlantic",
    area_name %in% east_south_central ~ "East South Central",
    area_name %in% west_south_central ~ "West South Central",
    area_name %in% mountain ~ "Mountain",
    area_name %in% pacific ~ "Pacific",
    TRUE ~ "ERROR"
  ))
```

### Write functions to do the both pieces


### Creating wrapper function



### Combine two datasets as one object



## Writing a Generic Function for Summarizing



## Put Together
